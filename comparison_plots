# import packages
import time
import numpy as np
import matplotlib.pyplot as plt
from PIL import Image
# import importlib.util
# import timeit
from imageio import imread


# import files 
from seamcarving import minimum_seam
from greedy import greedy_seam
from bruteforce import brute_seam
from dynamic_gpu import minimum_seam as dp_seam

def time_minimum_seams(paths):
    scale = 0.5
    times_seamcarving = []
    times_greedy = []
    times_bruteforce = []
    times_gpu = []
    for image_path in paths:
        image = imread(image_path) 
        start_time = time.time()
        minimum_seam(image)
        end_time = time.time()
        times_seamcarving.append(end_time - start_time)
        
        start_time = time.time()
        greedy_seam(image)
        end_time = time.time()
        times_greedy.append(end_time - start_time)

        # start_time = time.time()
        # brute_seam(image)
        # end_time = time.time()
        # times_bruteforce.append(end_time - start_time)

        start_time = time.time()
        dp_seam(image)
        end_time = time.time()
        times_gpu.append(end_time - start_time)

    return times_seamcarving, times_greedy, times_bruteforce, times_gpu


# Function to plot the runtime of minimum seam functions for the image
def plot_runtime_vs_scale(scales, times_seamcarving, times_greedy, times_bruteforce, times_gpu):
    plt.figure(figsize=(10, 6))
    plt.plot(scales, times_seamcarving, label='Seam Carving')
    plt.plot(scales, times_greedy, label='Greedy')
    # plt.plot(scales, times_bruteforce, label='Brute Force')
    plt.plot(scales, times_gpu, label='Dynamic Programming (GPU)')
    plt.title('Runtime Comparison of Minimum Seam Functions for the Image')
    plt.xlabel('Image Index')
    plt.ylabel('Runtime (s)')
    plt.legend()
    plt.tight_layout()
    plt.show()

img_paths = ["img4.jpg", "img3.jpg", "img2.jpg", "imgg1.jpg", "img5.jpg"]

# Main function
if __name__ == '__main__':
    times_seamcarving, times_greedy, times_bruteforce, times_gpu = time_minimum_seams(img_paths)
    plot_runtime_vs_scale(np.arange(len(img_paths)), times_seamcarving, times_greedy, times_bruteforce, times_gpu)